*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVCOF_STATUS_UPD................................*
FORM GET_DATA_ZVCOF_STATUS_UPD.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTCOF_STATUS_UPD WHERE
(VIM_WHERETAB) .
    CLEAR ZVCOF_STATUS_UPD .
ZVCOF_STATUS_UPD-MANDT =
ZTCOF_STATUS_UPD-MANDT .
ZVCOF_STATUS_UPD-SOURCE_STATUS =
ZTCOF_STATUS_UPD-SOURCE_STATUS .
ZVCOF_STATUS_UPD-TARGET_STATUS =
ZTCOF_STATUS_UPD-TARGET_STATUS .
ZVCOF_STATUS_UPD-TARGET_STATUS_DESC =
ZTCOF_STATUS_UPD-TARGET_STATUS_DESC .
    SELECT SINGLE * FROM TJ30T WHERE
STSMA = 'ZSTATUS' AND
ESTAT = ZTCOF_STATUS_UPD-SOURCE_STATUS AND
SPRAS = 'E' .
    IF SY-SUBRC EQ 0.
ZVCOF_STATUS_UPD-SOURCE_STATUS_DESC =
TJ30T-TXT30 .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVCOF_STATUS_UPD.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVCOF_STATUS_UPD .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVCOF_STATUS_UPD.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVCOF_STATUS_UPD-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTCOF_STATUS_UPD WHERE
  SOURCE_STATUS = ZVCOF_STATUS_UPD-SOURCE_STATUS AND
  TARGET_STATUS = ZVCOF_STATUS_UPD-TARGET_STATUS .
    IF SY-SUBRC = 0.
    DELETE ZTCOF_STATUS_UPD .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTCOF_STATUS_UPD WHERE
  SOURCE_STATUS = ZVCOF_STATUS_UPD-SOURCE_STATUS AND
  TARGET_STATUS = ZVCOF_STATUS_UPD-TARGET_STATUS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTCOF_STATUS_UPD.
    ENDIF.
ZTCOF_STATUS_UPD-MANDT =
ZVCOF_STATUS_UPD-MANDT .
ZTCOF_STATUS_UPD-SOURCE_STATUS =
ZVCOF_STATUS_UPD-SOURCE_STATUS .
ZTCOF_STATUS_UPD-TARGET_STATUS =
ZVCOF_STATUS_UPD-TARGET_STATUS .
ZTCOF_STATUS_UPD-TARGET_STATUS_DESC =
ZVCOF_STATUS_UPD-TARGET_STATUS_DESC .
    IF SY-SUBRC = 0.
    UPDATE ZTCOF_STATUS_UPD ##WARN_OK.
    ELSE.
    INSERT ZTCOF_STATUS_UPD .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVCOF_STATUS_UPD-UPD_FLAG,
STATUS_ZVCOF_STATUS_UPD-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVCOF_STATUS_UPD.
  SELECT SINGLE * FROM ZTCOF_STATUS_UPD WHERE
SOURCE_STATUS = ZVCOF_STATUS_UPD-SOURCE_STATUS AND
TARGET_STATUS = ZVCOF_STATUS_UPD-TARGET_STATUS .
ZVCOF_STATUS_UPD-MANDT =
ZTCOF_STATUS_UPD-MANDT .
ZVCOF_STATUS_UPD-SOURCE_STATUS =
ZTCOF_STATUS_UPD-SOURCE_STATUS .
ZVCOF_STATUS_UPD-TARGET_STATUS =
ZTCOF_STATUS_UPD-TARGET_STATUS .
ZVCOF_STATUS_UPD-TARGET_STATUS_DESC =
ZTCOF_STATUS_UPD-TARGET_STATUS_DESC .
    SELECT SINGLE * FROM TJ30T WHERE
STSMA = 'ZSTATUS' AND
ESTAT = ZTCOF_STATUS_UPD-SOURCE_STATUS AND
SPRAS = 'E' .
    IF SY-SUBRC EQ 0.
ZVCOF_STATUS_UPD-SOURCE_STATUS_DESC =
TJ30T-TXT30 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVCOF_STATUS_UPD-SOURCE_STATUS_DESC .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVCOF_STATUS_UPD USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVCOF_STATUS_UPD-SOURCE_STATUS TO
ZTCOF_STATUS_UPD-SOURCE_STATUS .
MOVE ZVCOF_STATUS_UPD-TARGET_STATUS TO
ZTCOF_STATUS_UPD-TARGET_STATUS .
MOVE ZVCOF_STATUS_UPD-MANDT TO
ZTCOF_STATUS_UPD-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTCOF_STATUS_UPD'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTCOF_STATUS_UPD TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTCOF_STATUS_UPD'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZVCOF_STATUS_UPD USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZTCOF_STATUS_UPD-MANDT =
ZVCOF_STATUS_UPD-MANDT .
ZTCOF_STATUS_UPD-SOURCE_STATUS =
ZVCOF_STATUS_UPD-SOURCE_STATUS .
ZTCOF_STATUS_UPD-TARGET_STATUS =
ZVCOF_STATUS_UPD-TARGET_STATUS .
ZTCOF_STATUS_UPD-TARGET_STATUS_DESC =
ZVCOF_STATUS_UPD-TARGET_STATUS_DESC .
    SELECT SINGLE * FROM TJ30T WHERE
STSMA = 'ZSTATUS' AND
ESTAT = ZTCOF_STATUS_UPD-SOURCE_STATUS AND
SPRAS = 'E' .
    IF SY-SUBRC EQ 0.
ZVCOF_STATUS_UPD-SOURCE_STATUS_DESC =
TJ30T-TXT30 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVCOF_STATUS_UPD-SOURCE_STATUS_DESC .
    ENDIF.
ENDFORM.
